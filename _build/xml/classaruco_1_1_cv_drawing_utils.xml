<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classaruco_1_1_cv_drawing_utils" kind="class" language="C++" prot="public">
    <compoundname>aruco::CvDrawingUtils</compoundname>
    <includes refid="cvdrawingutils_8h" local="no">cvdrawingutils.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classaruco_1_1_cv_drawing_utils_1aad06546c17df82056b5592342635530f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void aruco::CvDrawingUtils::draw3dAxis</definition>
        <argsstring>(cv::Mat &amp;Image, const CameraParameters &amp;CP, const cv::Mat &amp;Rvec, const cv::Mat &amp;Tvec, float axis_size)</argsstring>
        <name>draw3dAxis</name>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>Image</declname>
        </param>
        <param>
          <type>const <ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref> &amp;</type>
          <declname>CP</declname>
        </param>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>Rvec</declname>
        </param>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>Tvec</declname>
        </param>
        <param>
          <type>float</type>
          <declname>axis_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aruco_ros/aruco/include/aruco/cvdrawingutils.h" line="44" column="15" bodyfile="aruco_ros/aruco/src/aruco/cvdrawingutils.cpp" bodystart="37" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classaruco_1_1_cv_drawing_utils_1a401f7c58975c90e9f2ca5a2e0076637b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void aruco::CvDrawingUtils::draw3dAxis</definition>
        <argsstring>(cv::Mat &amp;Image, Marker &amp;m, const CameraParameters &amp;CP)</argsstring>
        <name>draw3dAxis</name>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>Image</declname>
        </param>
        <param>
          <type><ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref> &amp;</type>
          <declname>CP</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aruco_ros/aruco/include/aruco/cvdrawingutils.h" line="47" column="15" bodyfile="aruco_ros/aruco/src/aruco/cvdrawingutils.cpp" bodystart="71" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classaruco_1_1_cv_drawing_utils_1a6f56214524fc8bf68245a8683de30e04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void aruco::CvDrawingUtils::draw3dCube</definition>
        <argsstring>(cv::Mat &amp;Image, Marker &amp;m, const CameraParameters &amp;CP, bool setYperpendicular=false)</argsstring>
        <name>draw3dCube</name>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>Image</declname>
        </param>
        <param>
          <type><ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref> &amp;</type>
          <declname>CP</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>setYperpendicular</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="aruco_ros/aruco/include/aruco/cvdrawingutils.h" line="49" column="15" bodyfile="aruco_ros/aruco/src/aruco/cvdrawingutils.cpp" bodystart="105" bodyend="179"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A set of functions to draw in OpenCV images. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="aruco_ros/aruco/include/aruco/cvdrawingutils.h" line="42" column="1" bodyfile="aruco_ros/aruco/include/aruco/cvdrawingutils.h" bodystart="41" bodyend="53"/>
    <listofallmembers>
      <member refid="classaruco_1_1_cv_drawing_utils_1aad06546c17df82056b5592342635530f" prot="public" virt="non-virtual"><scope>aruco::CvDrawingUtils</scope><name>draw3dAxis</name></member>
      <member refid="classaruco_1_1_cv_drawing_utils_1a401f7c58975c90e9f2ca5a2e0076637b" prot="public" virt="non-virtual"><scope>aruco::CvDrawingUtils</scope><name>draw3dAxis</name></member>
      <member refid="classaruco_1_1_cv_drawing_utils_1a6f56214524fc8bf68245a8683de30e04" prot="public" virt="non-virtual"><scope>aruco::CvDrawingUtils</scope><name>draw3dCube</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
